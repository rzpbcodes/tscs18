// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

// This contract facilitates investments according to the votes of a council.
// All votes must be signed by the voters. Since the transactions are visible, 
// a "signature relay" attack can be employed to perform an investment multiple times.
contract SignatureBasedVulnerability {
    mapping(address => bool) private _council;
    address private _councilLeader;
    uint256 private _councilCount;

    constructor() {
        _councilLeader = msg.sender;
        _council[msg.sender] = true;
        _councilCount = 1;
    }

    function addToCouncil(address candidate) external {
        require(
            msg.sender == _councilLeader,
            "Only the council leader can add new members"
        );
        require(
            !_council[candidate],
            "This address already is a member of the council"
        );
        _councilCount++;
        _council[candidate] = true;
    }

    function removeFromCouncil(address councilMember) external {
        require(
            msg.sender == _councilLeader,
            "Only the council leader can remove members"
        );
        require(
            _council[councilMember],
            "This address is not a member of the council"
        );
        _councilCount--;
        _council[councilMember] = false;
    }

    function directFunds(
        address target,
        uint256 amount,
        uint8[] calldata v,
        bytes32[] calldata r,
        bytes32[] calldata s
    ) external {
        require(
            v.length > _councilCount / 2,
            "Half+1 of the council members must sign"
        );
        require(
            _councilCount >= 3,
            "The council must have at least 3 member before proposing investments"
        );
        bytes32 hashData = keccak256(abi.encodePacked(target, amount));
        for (uint256 index = 0; index < v.length; index++) {
            address councilMember = ecrecover(
                hashData,
                v[index],
                r[index],
                s[index]
            );
            require(
                _council[councilMember],
                "Not all signers are members of the council"
            );
        }
        payable(target).transfer(amount);
    }
}
